name: Terraform Build

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
        default: 'no'

permissions:
  contents: read
  pull-requests: write

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

jobs:
  security_scan:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Pull Docker image from ECR
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/threatmodelapp:latest
          docker pull $IMAGE_URI

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/threatmodelapp
          severity: CRITICAL

  terraform_static_analysis:
    name: 'Terraform Static Analysis'
    needs: security_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
            terraform_version: 1.5.2  


      - name: Terraform Format
        working-directory: Terraform  
        run: Terraform Fmt --recursive

      - name: Terraform Format Check
        working-directory: Terraform 
        run: Terraform Fmt -check

      - name: Terraform Init (Backend S3)
        working-directory: Terraform  
        run: |
          Terraform Init -backend-config="bucket=threat-model-bucket" \  
                         -backend-config="key=state" \
                         -backend-config="region=eu-west-2" \  
                         -backend-config="encrypt=true"

      - name: Terraform Validate
        working-directory: Terraform  
        run: terraform validate

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name: Terraform Lint
        working-directory: Terraform  
        run: tflint

  terraform_plan:
    name: 'Terraform Plan'
    needs: terraform_static_analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Terraform Plan
        working-directory: Terraform  
        id: tf-plan
        run: |
          terraform init -backend-config="bucket=threat-model-bucket" \  
                         -backend-config="key=state" \
                         -backend-config="region=eu-west-2" \  
                         -backend-config="encrypt=true"
          terraform plan

  terraform_apply:
    name: 'Terraform Apply'
    needs: terraform_plan
    runs-on: ubuntu-latest
    if: github.event.inputs.confirmation == 'yes'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Terraform Apply
        working-directory: Terraform  
        run: |
          terraform init -backend-config="bucket=threat-model-bucket" \  
                         -backend-config="key=state" \
                         -backend-config="region=eu-west-2" \  
                         -backend-config="encrypt=true"
          terraform apply -auto-approve
